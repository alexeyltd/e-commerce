{"ast":null,"code":"var _jsxFileName = \"/Users/a.pavlenko/Documents/work-projects/react-course-2020/e-commerce/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionSnaphotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnaphotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-course-2020/e-commerce/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionOverview","CollectionPage","firestore","convertCollectionSnaphotToMap","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","props","path","mapDispatchToProps","dispatch","updateCollection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,6BAApB,QAAyD,+BAAzD;AAEA,SAAQC,iBAAR,QAAgC,+BAAhC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGV,6BAA6B,CAACS,QAAD,CAAnD;AACD,KAFD;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEhB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAtBoC;;AAyBvC,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,gBAAgB,EAAEP,aAAa,IAAIM,QAAQ,CAACf,iBAAiB,CAACS,aAAD,CAAlB;AADL,CAAL,CAAnC;;AAIA,eAAeR,QAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport {connect} from 'react-redux'\n\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { firestore, convertCollectionSnaphotToMap } from \"../../firebase/firebase.utils\";\n\nimport {updateCollections} from '../../redux/shop/shop.actions'\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnaphotToMap(snapshot)\n    })\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollection: collectionMap => dispatch(updateCollections(collectionMap))\n})\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}