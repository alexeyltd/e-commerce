{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils.js\";\nimport { fetchCollectionsError, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"FIRED\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsError(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-course-2020/e-commerce/e-commerce/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsError","fetchCollectionsSuccess","fetchCollectionsAsync","console","log","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP;AAIA,SAASC,qBAAT,EAAgCC,uBAAhC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAC/BI,+BAD+B,EAE/BQ,QAF+B,CAAjC;AAIA,UAAMX,GAAG,CAACK,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACI,qBAAqB,CAACU,KAAK,CAACC,OAAP,CAAtB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,UAAU,CACdG,eAAe,CAACgB,uBADF,EAEdX,qBAFc,CAAhB;AAID","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils.js\";\nimport { fetchCollectionsError, fetchCollectionsSuccess } from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"FIRED\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapShot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsError(error.message))\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}