{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nimport { fetchCollectionsStart } from './shop/shop.saga';\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-course-2020/e-commerce/e-commerce/src/redux/store.js"],"names":["applyMiddleware","createStore","logger","persistStore","thunk","rootReducer","createSagaMiddleware","sagaMiddleware","fetchCollectionsStart","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,MAAMC,cAAc,GAAGD,oBAAoB,EAA3C;AAEA,SAAQE,qBAAR,QAAoC,kBAApC;AAEA,MAAMC,WAAW,GAAG,CAACF,cAAD,CAApB;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACD;;AAED,OAAO,MAAMY,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcL,eAAe,CAAC,GAAGS,WAAJ,CAA7B,CAAzB;AACPF,cAAc,CAACQ,GAAf,CAAmBP,qBAAnB;AAEA,OAAO,MAAMQ,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nimport {fetchCollectionsStart} from './shop/shop.saga'\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart)\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };\n"]},"metadata":{},"sourceType":"module"}