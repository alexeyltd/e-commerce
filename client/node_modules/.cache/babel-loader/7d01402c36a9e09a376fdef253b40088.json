{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { googleProvider, auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { useRef } from \"react\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield useRef.get();\n  } catch (error) {}\n}\nexport function* onGoogleInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleInStart)]);\n}","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-course-2020/e-commerce/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","useRef","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","error","onGoogleInStart","GOOGLE_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,cADF,EAEEC,IAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,MAAT,QAAuB,OAAvB;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAML,MAAM,CAACM,GAAP,EAA3B;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc,CAAE;AACnB;AAED,OAAO,UAAUC,eAAV,GAA4B;AACjC,QAAMhB,UAAU,CAACI,eAAe,CAACa,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUS,QAAV,GAAqB;AAC1B,QAAMhB,GAAG,CAAC,CAACC,IAAI,CAACa,eAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\nimport { useRef } from \"react\";\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield useRef.get();\n  } catch (error) {}\n}\n\nexport function* onGoogleInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSaga() {\n  yield all([call(onGoogleInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}