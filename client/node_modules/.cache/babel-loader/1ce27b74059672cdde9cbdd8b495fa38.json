{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [logger, sagaMiddleware]; // if (process.env.NODE_ENV === \"development\") {\n//   middlewares.push(logger);\n// }\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-course-2020/e-commerce/e-commerce/src/redux/store.js"],"names":["applyMiddleware","createStore","logger","persistStore","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","store","run","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACN,MAAD,EAASK,cAAT,CAApB,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAME,KAAK,GAAGR,WAAW,CAACG,WAAD,EAAcJ,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AACPD,cAAc,CAACG,GAAf,CAAmBJ,QAAnB;AAEA,OAAO,MAAMK,SAAS,GAAGR,YAAY,CAACM,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASN,EAAAA;AAAT,CAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from './root-saga'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [logger, sagaMiddleware];\n\n// if (process.env.NODE_ENV === \"development\") {\n//   middlewares.push(logger);\n// }\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };\n"]},"metadata":{},"sourceType":"module"}